{"ast":null,"code":"var _jsxFileName = \"/Users/dudabrasilc/Development/code/phase-5/exotic-cars-race/frontend/src/components/RaceCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CarRaceImage from \"./CarRaceImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RaceCard(_ref) {\n  _s();\n  var _race$race_track4;\n  let {\n    deleteRace,\n    deleteCar,\n    raceId,\n    updateFavorite\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [result, setResult] = useState(null);\n  const [hasMinimumCars, setHasMinimumCars] = useState(true);\n  const [showResult, setShowResult] = useState(false);\n  const [race, setRace] = useState([]);\n  useEffect(() => {\n    fetch(`/races/${raceId}`).then(resp => resp.json()).then(data => {\n      setIsFavorite(data.is_favorited);\n    });\n  }, [raceId]);\n  useEffect(() => {\n    fetch(`/races/${raceId}`).then(resp => resp.json()).then(data => {\n      setRace(data);\n    });\n  }, []);\n  if (!race) {\n    return null; // or some other fallback UI\n  }\n\n  const racesCar = race.races_cars && race.races_cars.find(racesCar => {\n    return toString(racesCar.race_id) === toString(race.id);\n  });\n\n  // this component is responsible to render all functionality of a racecard: delete race button, favorite race\n\n  const handleDeleteCar = carId => {\n    if (race && race.races_cars && racesCar) {\n      const racesCarToDelete = race.races_cars.find(racesCar => racesCar.car_id === carId);\n      if (racesCarToDelete) {\n        fetch(`/races_cars/${racesCarToDelete.id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(resp => resp.json()).then(data => {\n          deleteCar(carId);\n        }).catch(err => {\n          console.log(\"Error deleting race car:\", err);\n        });\n      }\n    }\n  };\n  const handleDeleteRace = () => {\n    if (race) {\n      fetch(`/races/${race.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        deleteRace(race.id);\n      }).catch(err => {\n        console.log(\"Error deleting race:\", err);\n      });\n    }\n  };\n  function handleFavorite() {\n    if (race) {\n      fetch(`/races/${race.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          is_favorited: !isFavorite\n        })\n      }).then(r => r.json()).then(data => {\n        setIsFavorite(isFavorite => !isFavorite);\n        updateFavorite(data);\n      }).catch(err => {\n        console.log(\"Error updating favorite:\", err);\n      });\n    }\n  }\n  function handleClick() {\n    if (race.cars.length >= 2) {\n      var _race$race_track, _race$race_track2, _race$race_track3, _race$cars, _sortedScores$, _sortedScores;\n      // Check if there are at least 2 cars in the race\n      setShowResult(true);\n      const trackLength = parseFloat(race === null || race === void 0 ? void 0 : (_race$race_track = race.race_track) === null || _race$race_track === void 0 ? void 0 : _race$race_track.length); // Get the length of the race track and convert it to a float\n      const trackTurns = parseInt(race === null || race === void 0 ? void 0 : (_race$race_track2 = race.race_track) === null || _race$race_track2 === void 0 ? void 0 : _race$race_track2.turns); // Get the number of turns in the race track and convert it to an integer\n      const trackVerticalGain = parseInt(race === null || race === void 0 ? void 0 : (_race$race_track3 = race.race_track) === null || _race$race_track3 === void 0 ? void 0 : _race$race_track3.vertical_gain); // Get the vertical gain of the race track and convert it to an integer\n\n      const carPerformanceScores = race === null || race === void 0 ? void 0 : (_race$cars = race.cars) === null || _race$cars === void 0 ? void 0 : _race$cars.map(car => {\n        // Loop through each car in the race and calculate its performance score\n\n        const carPower = parseFloat(car.power.split(\" \")[0]); // Get the power of the car and convert it to a float\n        const carTorque = parseFloat(car.torque.split(\" \")[0]); // Get the torque of the car and convert it to a float\n\n        const speedScore = car.top_speed / (trackLength * trackTurns); // Calculate the speed score of the car\n        const handlingScore = (carPower + carTorque) / car.weight; // Calculate the handling score of the car\n        const hillClimbScore = (carPower + carTorque) / trackVerticalGain; // Calculate the hill climb score of the car\n        const totalScore = speedScore + handlingScore + hillClimbScore; // Calculate the total score of the car\n\n        return {\n          car: car,\n          score: totalScore\n        }; // Return an object with the car and its performance score\n      });\n\n      const sortedScores = carPerformanceScores && carPerformanceScores.length > 0 ? carPerformanceScores.sort((a, b) => b.score - a.score) : []; // Sort the cars based on their performance score in descending order\n\n      const highestScore = (_sortedScores$ = sortedScores[0]) === null || _sortedScores$ === void 0 ? void 0 : _sortedScores$.score; // Get the performance score of the car with the highest score\n      const lowestScore = (_sortedScores = sortedScores[sortedScores.length - 1]) === null || _sortedScores === void 0 ? void 0 : _sortedScores.score; // Get the performance score of the car with the lowest score\n      const range = highestScore - lowestScore; // Calculate the range of performance scores\n\n      const result = sortedScores.map(car => {\n        const percentage = ((car.score - lowestScore) / range * 0.8 + 0.1) * 100;\n        const explanation = `The ${car.car.make} ${car.car.model} has a score of ${car.score.toFixed(2)}, which gives it a winning chance between ${(percentage - 5).toFixed(2)}% and ${percentage.toFixed(2)}%. This car has a top speed of ${car.car.top_speed} mph, a zero-to-sixty time of ${car.car.zero_to_sixty_mph} seconds, and a weight of ${car.car.weight} pounds. Based on these attributes, this car is ${percentage.toFixed(2)}% likely to win the race on this track.`;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [car.car.make, \" - \", car.car.model]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Winning Chance: \", `${(percentage - 5).toFixed(2)}% - ${percentage.toFixed(2)}%`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: explanation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      });\n      setResult(result);\n    } else {\n      setHasMinimumCars(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"race-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"race-title\",\n      children: [race === null || race === void 0 ? void 0 : race.name, \" - \", race === null || race === void 0 ? void 0 : (_race$race_track4 = race.race_track) === null || _race$race_track4 === void 0 ? void 0 : _race$race_track4.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-solid fa-pen-to-square cursor-pointer fa-2xl\",\n      style: {\n        color: '#290465',\n        textShadow: '1px 1px white'\n      },\n      onClick: e => setShow(!show)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: isFavorite ? \"fa-solid fa-star fa-2xl\" : \"fa-regular fa-star fa-2xl\",\n      onClick: handleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(CarRaceImage, {\n      race: race,\n      setRace: setRace,\n      handleDeleteCar: handleDeleteCar,\n      show: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deletebutton\",\n      onClick: handleDeleteRace,\n      children: \"DELETE RACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"racebutton\",\n      onClick: handleClick,\n      children: \"LET'S RACE!  \\uD83C\\uDFC1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }, this), showResult ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"result-title\",\n        children: \"Race Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : null, result, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-minimum\",\n      children: hasMinimumCars ? null : \"Error: A race must have at least 2 cars.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 7\n  }, this);\n}\n_s(RaceCard, \"9sEfGEmmRtGRXlFfeaZQDJsDnEk=\");\n_c = RaceCard;\nexport default RaceCard;\nvar _c;\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"names":["React","useState","useEffect","CarRaceImage","jsxDEV","_jsxDEV","Fragment","_Fragment","RaceCard","_ref","_s","_race$race_track4","deleteRace","deleteCar","raceId","updateFavorite","show","setShow","isFavorite","setIsFavorite","result","setResult","hasMinimumCars","setHasMinimumCars","showResult","setShowResult","race","setRace","fetch","then","resp","json","data","is_favorited","racesCar","races_cars","find","toString","race_id","id","handleDeleteCar","carId","racesCarToDelete","car_id","method","headers","catch","err","console","log","handleDeleteRace","handleFavorite","body","JSON","stringify","r","handleClick","cars","length","_race$race_track","_race$race_track2","_race$race_track3","_race$cars","_sortedScores$","_sortedScores","trackLength","parseFloat","race_track","trackTurns","parseInt","turns","trackVerticalGain","vertical_gain","carPerformanceScores","map","car","carPower","power","split","carTorque","torque","speedScore","top_speed","handlingScore","weight","hillClimbScore","totalScore","score","sortedScores","sort","a","b","highestScore","lowestScore","range","percentage","explanation","make","model","toFixed","zero_to_sixty_mph","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","style","color","textShadow","onClick","e","_c","$RefreshReg$"],"sources":["/Users/dudabrasilc/Development/code/phase-5/exotic-cars-race/frontend/src/components/RaceCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CarRaceImage from \"./CarRaceImage\";\n\nfunction RaceCard({ deleteRace, deleteCar, raceId, updateFavorite }) {\n  const [show, setShow] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [result, setResult] = useState(null);\n  const [hasMinimumCars, setHasMinimumCars] = useState(true);\n  const [showResult, setShowResult] = useState(false);\n  const [race, setRace] = useState([]);\n\n  useEffect(() => {\n    fetch(`/races/${raceId}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setIsFavorite(data.is_favorited);\n      });\n  }, [raceId]);\n\n  useEffect(() => {\n    fetch(`/races/${raceId}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setRace(data);\n      });\n  }, []);\n\n  if (!race) {\n    return null; // or some other fallback UI\n  }\n\n  const racesCar =\n    race.races_cars && race.races_cars.find((racesCar) => {\n      return toString(racesCar.race_id) === toString(race.id);\n    });\n\n  // this component is responsible to render all functionality of a racecard: delete race button, favorite race\n\n\n  const handleDeleteCar = (carId) => {\n    if (race && race.races_cars && racesCar) {\n      const racesCarToDelete = race.races_cars.find(\n        (racesCar) => racesCar.car_id === carId\n      );\n  \n      if (racesCarToDelete) {\n        fetch(`/races_cars/${racesCarToDelete.id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n          .then(resp => resp.json())\n          .then(data => {\n            deleteCar(carId);\n          })\n          .catch(err => {\n            console.log(\"Error deleting race car:\", err);\n          });\n      }\n    }\n  };\n  \n\n    const handleDeleteRace = () => {\n      if (race) {\n        fetch(`/races/${race.id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n          .then(resp => resp.json())\n          .then(data => {\n            deleteRace(race.id);\n          })\n          .catch(err => {\n            console.log(\"Error deleting race:\", err);\n          });\n      }\n    };\n\n  \n    function handleFavorite() {\n      if (race) {\n        fetch(`/races/${race.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            is_favorited: !isFavorite\n          }),\n        })\n          .then(r => r.json())\n          .then(data => {\n            setIsFavorite(isFavorite => !isFavorite);\n            updateFavorite(data);\n          })\n          .catch(err => {\n            console.log(\"Error updating favorite:\", err);\n          });\n      }\n    }\n\n  function handleClick() {\n\n\n\n  if (race.cars.length >= 2) { // Check if there are at least 2 cars in the race\n    setShowResult(true)\n    const trackLength = parseFloat(race?.race_track?.length); // Get the length of the race track and convert it to a float\n    const trackTurns = parseInt(race?.race_track?.turns); // Get the number of turns in the race track and convert it to an integer\n    const trackVerticalGain = parseInt(race?.race_track?.vertical_gain); // Get the vertical gain of the race track and convert it to an integer\n  \n    const carPerformanceScores = race?.cars?.map(car => { // Loop through each car in the race and calculate its performance score\n      \n        const carPower = parseFloat(car.power.split(\" \")[0]); // Get the power of the car and convert it to a float\n        const carTorque = parseFloat(car.torque.split(\" \")[0]); // Get the torque of the car and convert it to a float\n\n        const speedScore = car.top_speed / (trackLength * trackTurns); // Calculate the speed score of the car\n        const handlingScore = (carPower + carTorque) / car.weight; // Calculate the handling score of the car\n        const hillClimbScore = (carPower + carTorque) / trackVerticalGain; // Calculate the hill climb score of the car\n        const totalScore = speedScore + handlingScore + hillClimbScore; // Calculate the total score of the car\n\n        return {car: car, score: totalScore}; // Return an object with the car and its performance score\n    });\n  \n    const sortedScores = carPerformanceScores && carPerformanceScores.length > 0 ? carPerformanceScores.sort((a, b) => b.score - a.score) : []; // Sort the cars based on their performance score in descending order\n\n    const highestScore = sortedScores[0]?.score; // Get the performance score of the car with the highest score\n    const lowestScore = sortedScores[sortedScores.length - 1]?.score; // Get the performance score of the car with the lowest score\n    const range = highestScore - lowestScore; // Calculate the range of performance scores\n    \n      const result = sortedScores.map(car => {\n          const percentage = ((car.score - lowestScore) / range * 0.8 + 0.1) * 100;\n          const explanation = `The ${car.car.make} ${car.car.model} has a score of ${car.score.toFixed(2)}, which gives it a winning chance between ${(percentage - 5).toFixed(2)}% and ${percentage.toFixed(2)}%. This car has a top speed of ${car.car.top_speed} mph, a zero-to-sixty time of ${car.car.zero_to_sixty_mph} seconds, and a weight of ${car.car.weight} pounds. Based on these attributes, this car is ${(percentage).toFixed(2)}% likely to win the race on this track.`;\n          return (\n              <>\n              <div className=\"results\">\n                  <h1>{car.car.make} - {car.car.model}</h1>\n                  <h2>Winning Chance: {`${(percentage - 5).toFixed(2)}% - ${percentage.toFixed(2)}%`}</h2>\n                  <h3>{explanation}</h3>\n              </div>\n              </>\n          \n          );\n      });\n  \n  \n      setResult(result)\n    \n\n  } else {\n      setHasMinimumCars(false)\n  }\n     \n    }\n\n\n  return(\n      <div className=\"race-card\">\n          <h2 className=\"race-title\">{race?.name} - {race?.race_track?.name}</h2>\n          <i className=\"fa-solid fa-pen-to-square cursor-pointer fa-2xl\" style={{ color: '#290465', textShadow: '1px 1px white'}} onClick={(e) => setShow(!show)}></i>\n          {/* favorite star */}\n           <i className={isFavorite ? \"fa-solid fa-star fa-2xl\" : \"fa-regular fa-star fa-2xl\" } onClick={handleFavorite} />\n           {/* first function in the image div is show and hide the X. the link is the image of the races car */}\n          <CarRaceImage race={race} setRace={setRace} handleDeleteCar={handleDeleteCar} show={show}/>\n          <button className=\"deletebutton\" onClick={handleDeleteRace}>DELETE RACE</button>\n          <br></br>\n          <br></br>\n          <button className=\"racebutton\" onClick={handleClick} >LET'S RACE!  🏁</button>\n          {/* <hr></hr> */}\n          {\n            showResult ?\n            <>\n              <hr></hr>\n              <h1 className=\"result-title\">Race Results</h1>\n            </>\n              :\n              null\n          }\n          {result}\n          <div className=\"error-minimum\">{hasMinimumCars ? null : \"Error: A race must have at least 2 cars.\"}</div>   \n      </div>\n  )\n}\n\n\nexport default RaceCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}