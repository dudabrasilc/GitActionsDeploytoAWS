name: Build and Deploy

on:
  # workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:

env:
  applicationfolder: exotic
  AWS_REGION: us-east-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-1idxex6e7sabt


jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_DB: pokedex_development
    options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.4'

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package
        id: package
        run: |
          $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: Upload Artifact to s3
        working-directory: ${{ env.applicationfolder }}/backend/public
        run: aws s3 cp . s3://${{ env.S3BUCKET }}/${{ env.applicationfolder }}/backend --recursive
        
      - name: Upload Artifact to s3
        working-directory: ${{ env.applicationfolder }}/frontend/build
        run: aws s3 cp . s3://${{ env.S3BUCKET }}/${{ env.applicationfolder }}/frontend --recursive
        
  deploy:
     ports:
    - 5432:5432
       env:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    needs: build
    runs-on: ubuntu-latest
    # environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy to CodeDeploy
        run: |
          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
          commit_hash=`git rev-parse HEAD`
          aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
