name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:

env:
  applicationfolder: exotic
  AWS_REGION: us-east-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-1idxex6e7sabt

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and Package Rails backend
        id: package-backend
        working-directory: ${{ env.applicationfolder }}/backend
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: Build and Package React frontend
        id: package-frontend
        working-directory: ${{ env.applicationfolder }}/frontend
        run: $GITHUB_WORKSPACE/.github/scripts/build.sh

      - name: Upload Artifacts to s3
        working-directory: ${{ env.applicationfolder }}/backend
        run: |
          aws s3 cp *.war s3://${{ env.S3BUCKET }}/
          cd ../frontend && aws s3 cp build/* s3://${{ env.S3BUCKET }}/

- name: Make build script executable
  run: chmod +x $GITHUB_WORKSPACE/.github/scripts/build.sh
- name: Build
  run: $GITHUB_WORKSPACE/.github/scripts/build.sh



  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}
      - name: Deploy to Elastic Beanstalk
        run: |
          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
          commit_hash=`git rev-parse HEAD`
          aws elasticbeanstalk create-application-version --application-name exotic --version-label $commit_hash --source-bundle S3Bucket=${{ env.S3BUCKET }},S3Key=<key to artifacts>
          aws elasticbeanstalk update-environment --environment-name Dev --version-label $commit_hash
